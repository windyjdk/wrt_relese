name: Relese WRT
run-name: Relese - ${{ inputs.model }}

on:
  workflow_dispatch:
    inputs:
      model:
        required: true
        description: Device Model
        type: choice
        default: jdc_ax1800pro-ax6600_libwrt
        options:
          - jdc_ax1800pro-ax6600_ipqwrt
          - jdc_ax1800pro-ax6600_libwrt
          - jdc_ax1800pro-ax6600_immwrt
          - rax3000m_immwrt21
          - redmi_ax6000_immwrt21
          - jdc_ax6000_imm23
      runs-on:
        required: true
        description: Runs on...
        type: choice
        default: ubuntu-20.04
        options:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-latest

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}

    steps:
    - uses: actions/checkout@v4

    - name: Free Disk Space
      uses: endersonmenezes/free-disk-space@main
      with:
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "android* azure* clang* dotnet* firefox* ghc* golang* google* libclang* libgl1* lld* llvm* \
          microsoft* mongodb* mono* mysql* nodejs* openjdk* php* postgresql* powershell* snap* temurin* yarn* zulu*"
        remove_packages_one_command: true
        remove_folders: "/etc/apt/sources.list.d* /etc/mono* /etc/mysql* /usr/include/linux/android* /usr/lib/llvm* /usr/lib/mono* \
          /usr/local/lib/android* /usr/local/lib/node_modules* /usr/local/share/chromium* /usr/local/share/powershell* \
          /usr/local/share/vcpkg/ports/azure* /usr/local/share/vcpkg/ports/google* /usr/local/share/vcpkg/ports/libpq/android* \
          /usr/local/share/vcpkg/ports/llvm* /usr/local/share/vcpkg/ports/mysql* /usr/local/share/vcpkg/ports/snap* \
          /usr/share/azure* /usr/share/dotnet* /usr/share/glade* /usr/share/miniconda* /usr/share/php* /usr/share/swift \
          /var/lib/mysql* /var/log/azure*"
        testing: false

    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache
        key: ${{ runner.os }}-build-${{ hashFiles('**/build.sh') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt -yqq update
        sudo -E apt -yqq full-upgrade
        sudo -E apt -yqq autoremove --purge
        sudo -E apt -yqq autoclean
        sudo -E apt -yqq clean
        sudo -E apt -yqq install dos2unix
        sudo -E apt -yqq install libfuse-dev
        sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo -E systemctl daemon-reload
        sudo -E timedatectl set-timezone "Asia/Shanghai"

    - name: Initialization Values
      run: |
        export BUILD_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
        export BUILD_SRC=$(awk -F"=" '/REPO_URL/ {print $NF}' "./compilecfg/${{ inputs.model }}.ini")
        echo "BUILD_SRC=$BUILD_SRC" >> $GITHUB_ENV
    
    - name: Build Firmware
      run: ./build.sh ${{ inputs.model }}

    - name: Prepare Release Body
      run: |
        echo "云编译发布" > release_body.txt
        echo "源码：${{ env.BUILD_SRC }}" >> release_body.txt
        echo "WIFI密码：12345678" >> release_body.txt
        echo "LAN地址：192.168.1.1" >> release_body.txt
        echo "插件：" >> release_body.txt
        echo "$(grep -oP "luci-app-[a-zA-Z0-9]{1,30}" ./firmware/*.manifest | awk -F":" '{print $NF}')"  >> release_body.txt

    - name: Release Firmware
      uses: softprops/action-gh-release@master
      with:
        tag_name: ${{ env.BUILD_DATE }}_${{ inputs.model }}
        files: ./firmware/*.*
        body_path: ./release_body.txt
